FROM alpine:3.20
LABEL maintainer="uday kiran reddy"

# Build arguments (can override at build time)
ARG JDK_VERSION=17
ARG NODE_VERSION=18
ARG MAVEN_VERSION=3.9.4

# Environment variables
ENV JAVA_HOME=/usr/lib/jvm/java-${JDK_VERSION}-openjdk
ENV MAVEN_HOME=/opt/maven
ENV PATH="${PATH}:${MAVEN_HOME}/bin"

# Install minimal dependencies
RUN apk add --no-cache \
      git \
      openssh \
      curl \
      wget \
      unzip \
      bash \
      ca-certificates \
      shadow \
      libc6-compat \
      libstdc++ \
      gcc \
      g++ \
      make

# Install Java dynamically
RUN apk add --no-cache openjdk${JDK_VERSION}

# Install Node.js dynamically
RUN curl -fsSL https://unofficial-builds.nodejs.org/download/release/v${NODE_VERSION}.0.0/node-v${NODE_VERSION}.0.0-linux-x64-musl.tar.gz \
    | tar -xz -C /usr/local --strip-components=1 \
 && node -v && npm -v

# Enable Yarn via npm globally
RUN npm install -g yarn

# Install Maven dynamically
RUN curl -fsSL https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
    | tar -xz -C /opt && \
    ln -s /opt/apache-maven-${MAVEN_VERSION} /opt/maven && \
    echo 'export PATH=$PATH:/opt/maven/bin' > /etc/profile.d/maven.sh

# Create Jenkins user
RUN adduser -D jenkins && \
    echo "jenkins:jenkins" | chpasswd && \
    mkdir -p /home/jenkins/.m2 /home/jenkins/.ssh /workspace && \
    chown -R jenkins:jenkins /home/jenkins /workspace

# Copy authorized keys
COPY .ssh/authorized_keys /home/jenkins/.ssh/authorized_keys
RUN chmod 700 /home/jenkins/.ssh && chmod 600 /home/jenkins/.ssh/authorized_keys

# SSH setup
RUN mkdir -p /var/run/sshd
EXPOSE 22

WORKDIR /workspace
CMD ["/usr/sbin/sshd", "-D"]


